plugins {
    id 'java-library'
    id 'jacoco'
}

group 'net.sandrohc'
version '0.1.0'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

jar {
    manifest {
        attributes(
                'Implementation-Title': 'reactive-jikan',
                'Implementation-Version': project.version
        )
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Project Reactor
    implementation 'io.projectreactor.netty:reactor-netty:0.9.9.RELEASE'

    // Jackson (JSON serializer)
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.1'

    // Logging
    api 'org.slf4j:slf4j-api:2.0.0-alpha1'

    testRuntime 'org.slf4j:slf4j-simple:2.0.0-alpha1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.7.0-M1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0-M1'
    testImplementation 'org.mock-server:mockserver-client-java:5.11.0'
    testImplementation 'org.mock-server:mockserver-netty:5.11.0'
    testImplementation 'io.projectreactor:reactor-test:3.3.7.RELEASE'
    testImplementation 'io.projectreactor.tools:blockhound:1.0.4.RELEASE'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

tasks.withType(JavaCompile) {
    // force UTF-8 encoding on Windows machines
    options.encoding = 'UTF-8'
}