plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
    id 'com.jfrog.bintray' version '1.8.5'
}

group 'net.sandrohc'
version '0.1.2'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withJavadocJar()
    withSourcesJar()
}

jar {
    manifest {
        attributes(
                'Implementation-Title': 'reactive-jikan',
                'Implementation-Version': project.version
        )
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Project Reactor
    api 'io.projectreactor.netty:reactor-netty:1.0.1'

    // Jackson (JSON serializer)
    api 'com.fasterxml.jackson.core:jackson-databind:2.11.3'
    api 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.3'

    // Logging
    api 'org.slf4j:slf4j-api:2.0.0-alpha1'

    // Tests
    testRuntime 'org.slf4j:slf4j-simple:2.0.0-alpha1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.mock-server:mockserver-client-java:5.11.2'
    testImplementation 'org.mock-server:mockserver-netty:5.11.2'
    testImplementation 'io.projectreactor:reactor-test:3.4.0'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

tasks.withType(JavaCompile) {
    // force UTF-8 encoding on Windows machines
    options.encoding = 'UTF-8'
}


bintray {
    user = findProperty('bintray.user')
    key = findProperty('bintray.apikey')

    publications = ['maven']
    pkg {
        repo = 'reactive-jikan'
        name = 'reactive-jikan'
        desc = 'API wrapper for Jikan - an unofficial MyAnimeList API - with the power of Project Reactor and reactive streams. ⚡'
        githubRepo = 'SandroHc/reactive-jikan'
        websiteUrl      = 'https://github.com/SandroHc/reactive-jikan'
        issueTrackerUrl = 'https://github.com/SandroHc/reactive-jikan/issues'
        vcsUrl          = 'https://github.com/SandroHc/reactive-jikan.git'
        licenses = ['LGPL-2.1']
        labels = ['jikan', 'project reactor', 'reactive streams', 'reactive programming', 'myanimelist']

        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true

        version {
            name = project.version
            desc = "Reactive Jikan v${project.version}"
            released = new Date()
            vcsTag = project.version

            gpg {
                sign = true
                passphrase = findProperty('bintray.gpg.password')
            }
        }
    }
}


publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = 'Reactive Jikan'
                description = 'API wrapper for Jikan - an unofficial MyAnimeList API - with the power of Project Reactor and reactive streams. ⚡'
                url = 'https://github.com/SandroHc/reactive-jikan'
                licenses {
                    license {
                        name = 'GNU Lesser General Public License v2.1'
                        url = 'https://gnu.org/licenses/old-licenses/lgpl-2.1.en.html'
                    }
                }
                developers {
                    developer {
                        id = 'SandroHc'
                        name = 'Sandro Marques'
                        email = 'sandro123iv@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/SandroHc/reactive-jikan.git'
                    developerConnection = 'scm:git:ssh://github.com/SandroHc/reactive-jikan.git'
                    url = 'https://github.com/SandroHc/reactive-jikan'
                }
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.maven
}